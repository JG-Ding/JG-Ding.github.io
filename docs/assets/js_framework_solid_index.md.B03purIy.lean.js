import{_ as s,c as o,o as t,j as e,a}from"./chunks/framework.CceCxLSN.js";const k=JSON.parse('{"title":"solidjs","description":"","frontmatter":{},"headers":[],"relativePath":"js/framework/solid/index.md","filePath":"js/framework/solid/index.md"}'),d={name:"js/framework/solid/index.md"},r=e("h1",{id:"solidjs",tabindex:"-1"},[a("solidjs "),e("a",{class:"header-anchor",href:"#solidjs","aria-label":'Permalink to "solidjs"'},"​")],-1),i=e("h2",{id:"list-map-index和for的区别",tabindex:"-1"},[a("list.map()，Index和For的区别 "),e("a",{class:"header-anchor",href:"#list-map-index和for的区别","aria-label":'Permalink to "list.map()，Index和For的区别"'},"​")],-1),n=e("p",null,"list.map()全量更新：适合做静态列表渲染；Index在依赖的键值发生变化的时候更新整个列表中的每个项目的相应的键值，不涉及列表dom的重新增删；For在某个依赖的列表项的上数据发生变化的时候，将会销毁这个列表项及其dom，重新创一个新的，而不管其他项；一般地，Index用的多，渲染长列表用For。",-1),l=[r,i,n];function c(m,_,p,h,x,f){return t(),o("div",null,l)}const u=s(d,[["render",c]]);export{k as __pageData,u as default};
